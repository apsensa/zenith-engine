version: '3'

services:

  composer:
    image: prooph/composer:8.2
    user: "$UID:$GID"
    volumes:
      - ./:/app

  nginx:
    image: nginx:latest
    container_name: zenith-nginx
#    user: "$UID:$GID"
    ports:
      - '8080:80'
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    links:
      - php-fpm

  php-fpm:
    build:
      context: docker/phpfpm
    container_name: zenith-phpfpm
    user: "$UID:$GID"
    volumes:
      - ./:/var/www
    restart: "no"

  mariadb:
    image: mariadb:10.5.8
    container_name: zenith-mysql
    environment:
      MYSQL_ROOT_PASSWORD: "rootpassword"
    restart: "no"

  console:
    build:
      context: docker/phpfpm
    entrypoint: bin/console
    user: "$UID:$GID"
    volumes:
      - ./:/var/www
    restart: "no"

####> doctrine/doctrine-bundle ###
#  database:
#    image: postgres:${POSTGRES_VERSION:-16}-alpine
#    environment:
#      POSTGRES_DB: ${POSTGRES_DB:-app}
#      # You should definitely change the password in production
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
#      POSTGRES_USER: ${POSTGRES_USER:-app}
#    healthcheck:
#      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
#      timeout: 5s
#      retries: 5
#      start_period: 60s
#    volumes:
#      - database_data:/var/lib/postgresql/data:rw
#      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
#      # - ./docker/db/data:/var/lib/postgresql/data:rw
####< doctrine/doctrine-bundle ###
#
#volumes:
####> doctrine/doctrine-bundle ###
#  database_data:
####< doctrine/doctrine-bundle ###
